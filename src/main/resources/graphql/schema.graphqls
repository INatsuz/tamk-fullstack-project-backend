scalar Date

type Query {
    getAllPosts(amount: Int, page: Int): [Post]
    getPostById(postId: ID!): Post
    getPostsByUsername(username: String!): [Post]
    getTopPosts(amount: Int!): [Post]
    getTopLikedPosts(amount: Int!): [Post]
    getAllUsers: [User]
    getUserDetailsById(userId: ID!): User
}

type Mutation {
    createPost(postInput: PostInput): Post
    deletePostById(postId: ID!): Post
    likePost(postId: ID): Post
    unlikePost(postId: ID): Post
    addComment(commentInput: CommentInput!): Post
    removeCommentById(commentId: ID!): Post
}

input PostInput {
    title: String!
    message: String!
    category: String!
}

input CommentInput {
    postId: ID!
    message: String!
}

type Comment {
    id: ID!
    message: String!
    user: User!
    createdAt: Date!
}

type Post {
    id: ID!
    title: String!
    message: String!
    category: String!
    user: User!
    createdAt: Date!
    comments: [Comment]!
    likes: [User]!
    numComments: Int!
    numLikes: Int!
}

type User {
    id: ID!
    username: String!
    email: String!
    roles: [Role]
    bio: String
}

type Role {
    id: ID!
    name: String!
}

